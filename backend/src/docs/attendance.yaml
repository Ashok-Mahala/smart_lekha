paths:
  /api/attendance:
    get:
      tags:
        - Attendance
      summary: Get all attendance records
      description: Retrieve a list of all attendance records with optional filtering and pagination
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
          description: Page number for pagination
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
          description: Number of items per page
        - in: query
          name: student
          schema:
            type: string
          description: Filter by student ID
        - in: query
          name: status
          schema:
            type: string
            enum: [present, absent, late, excused]
          description: Filter by attendance status
        - in: query
          name: startDate
          schema:
            type: string
            format: date
          description: Start date for filtering
        - in: query
          name: endDate
          schema:
            type: string
            format: date
          description: End date for filtering
      responses:
        '200':
          description: List of attendance records retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  count:
                    type: integer
                  total:
                    type: integer
                  totalPages:
                    type: integer
                  currentPage:
                    type: integer
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Attendance'
    post:
      tags:
        - Attendance
      summary: Create a new attendance record
      description: Create a new attendance record
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - student
                - date
                - status
              properties:
                student:
                  type: string
                  description: ID of the student
                date:
                  type: string
                  format: date
                  description: Date of attendance
                status:
                  type: string
                  enum: [present, absent, late, excused]
                  description: Attendance status
                notes:
                  type: string
                  description: Additional notes
                recordedBy:
                  type: string
                  description: ID of the user recording attendance
      responses:
        '201':
          description: Attendance record created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Attendance'

  /api/attendance/{id}:
    get:
      tags:
        - Attendance
      summary: Get an attendance record by ID
      description: Retrieve a specific attendance record by its ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Attendance record ID
      responses:
        '200':
          description: Attendance record retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Attendance'
    put:
      tags:
        - Attendance
      summary: Update an attendance record
      description: Update an existing attendance record
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Attendance record ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [present, absent, late, excused]
                notes:
                  type: string
      responses:
        '200':
          description: Attendance record updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Attendance'
    delete:
      tags:
        - Attendance
      summary: Delete an attendance record
      description: Delete an attendance record (admin only)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Attendance record ID
      responses:
        '200':
          description: Attendance record deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object

  /api/attendance/bulk:
    post:
      tags:
        - Attendance
      summary: Create multiple attendance records
      description: Create multiple attendance records in bulk
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - records
              properties:
                records:
                  type: array
                  items:
                    type: object
                    required:
                      - student
                      - date
                      - status
                    properties:
                      student:
                        type: string
                      date:
                        type: string
                        format: date
                      status:
                        type: string
                        enum: [present, absent, late, excused]
                      notes:
                        type: string
      responses:
        '201':
          description: Bulk attendance records created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Attendance'

  /api/attendance/stats:
    get:
      tags:
        - Attendance
      summary: Get attendance statistics
      description: Get statistics about attendance records
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: startDate
          schema:
            type: string
            format: date
          description: Start date for statistics
        - in: query
          name: endDate
          schema:
            type: string
            format: date
          description: End date for statistics
      responses:
        '200':
          description: Attendance statistics retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      totalRecords:
                        type: integer
                      byStatus:
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                            count:
                              type: integer
                      averageAttendance:
                        type: number
                      dailyStats:
                        type: array
                        items:
                          type: object
                          properties:
                            date:
                              type: string
                              format: date
                            present:
                              type: integer
                            absent:
                              type: integer
                            late:
                              type: integer
                            excused:
                              type: integer

components:
  schemas:
    Attendance:
      type: object
      properties:
        _id:
          type: string
        student:
          type: string
          description: ID of the student
        date:
          type: string
          format: date
        status:
          type: string
          enum: [present, absent, late, excused]
        notes:
          type: string
        recordedBy:
          type: string
          description: ID of the user who recorded the attendance
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time 