paths:
  /smlekha/students:
    get:
      tags:
        - Students
      summary: Get all students
      description: Retrieve a list of all students with optional filtering and pagination
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
          description: Page number for pagination
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
          description: Number of items per page
        - in: query
          name: status
          schema:
            type: string
            enum: [active, inactive, suspended]
          description: Filter by student status
        - in: query
          name: search
          schema:
            type: string
          description: Search by name or student ID
      responses:
        '200':
          description: List of students retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  count:
                    type: integer
                  total:
                    type: integer
                  totalPages:
                    type: integer
                  currentPage:
                    type: integer
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Student'
    post:
      tags:
        - Students
      summary: Create a new student
      description: Create a new student record
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - studentId
                - email
                - phone
              properties:
                name:
                  type: string
                  description: Full name of the student
                studentId:
                  type: string
                  description: Unique student ID
                email:
                  type: string
                  format: email
                  description: Email address
                phone:
                  type: string
                  description: Phone number
                address:
                  type: string
                  description: Physical address
                status:
                  type: string
                  enum: [active, inactive, suspended]
                  description: Student status
                notes:
                  type: string
                  description: Additional notes
      responses:
        '201':
          description: Student created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Student'

  /smlekha/students/{id}:
    get:
      tags:
        - Students
      summary: Get a student by ID
      description: Retrieve a specific student by their ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Student ID
      responses:
        '200':
          description: Student retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Student'
    put:
      tags:
        - Students
      summary: Update a student
      description: Update an existing student record
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Student ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                phone:
                  type: string
                address:
                  type: string
                status:
                  type: string
                  enum: [active, inactive, suspended]
                notes:
                  type: string
      responses:
        '200':
          description: Student updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Student'
    delete:
      tags:
        - Students
      summary: Delete a student
      description: Delete a student record (admin only)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Student ID
      responses:
        '200':
          description: Student deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object

  /smlekha/students/{id}/attendance:
    get:
      tags:
        - Students
      summary: Get student attendance history
      description: Get attendance history for a specific student
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Student ID
        - in: query
          name: startDate
          schema:
            type: string
            format: date
          description: Start date for history
        - in: query
          name: endDate
          schema:
            type: string
            format: date
          description: End date for history
      responses:
        '200':
          description: Student attendance history retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      records:
                        type: array
                        items:
                          $ref: '#/components/schemas/Attendance'
                      stats:
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                            count:
                              type: integer

  /smlekha/students/{id}/payments:
    get:
      tags:
        - Students
      summary: Get student payment history
      description: Get payment history for a specific student
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Student ID
        - in: query
          name: startDate
          schema:
            type: string
            format: date
          description: Start date for history
        - in: query
          name: endDate
          schema:
            type: string
            format: date
          description: End date for history
      responses:
        '200':
          description: Student payment history retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      payments:
                        type: array
                        items:
                          $ref: '#/components/schemas/Payment'
                      stats:
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                            count:
                              type: integer
                            totalAmount:
                              type: number

  /smlekha/students/stats:
    get:
      tags:
        - Students
      summary: Get student statistics
      description: Get statistics about students (admin only)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Student statistics retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      totalStudents:
                        type: integer
                      activeStudents:
                        type: integer
                      inactiveStudents:
                        type: integer
                      suspendedStudents:
                        type: integer
                      averageAttendance:
                        type: number
                      totalPayments:
                        type: number

components:
  schemas:
    Student:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        studentId:
          type: string
        email:
          type: string
          format: email
        phone:
          type: string
        address:
          type: string
        status:
          type: string
          enum: [active, inactive, suspended]
        notes:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time 